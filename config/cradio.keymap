/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT_L   0
#define SYMBOLS_L   1
#define NAVI_L      2
#define NUMBERS_L   3

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q       &kp W   &kp F   &kp P   &kp B 						        &kp J   &kp L   &kp U       &kp Y   &kp BSPC
		&kp A       &kp R   &kp S   &kp T   &kp G 			        	        &kp M   &kp N   &kp E       &kp I   &kp O
		&kp Z       &kp X   &kp C   &kp D   &kp V				                &kp K   &kp H   &kp CMMA    &kp DOT &kp SEMI
          				            &kp LSHFT &kp LCTL  				        &to SYMBOLS_L   &kp SPC
		>;
		};

       		symbols_layer {
		bindings = <
		&kp ESC     &kp AT      &kp HASH    &kp DLLR    &kp PRCNT 						    &kp CARET   &kp AMPS    &kp STAR    &kp MINUS   &kp BSPC
		&kp TAB     &none       &none       &kp APOS    &kp PLUS 			        	    &kp QMARK   &kp LBRC    &kp RBRC    &kp PIPE    &kp ENTER
		&kp TILDE   &kp GRAVE   &none       &kp DQT     &none				                &kp LBKT    &kp LPAR    &kp RPAR    &kp RBKT    &to NAVI_L
          				                    &none       &to DEFAULT_L  				        &to NUMBERS_L   &kp SPC
		>;
		};
		
		navi_layer {
		bindings = <
		&kp ESC     &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    					&none       &none       &none       &none       &kp BSPC
		&kp TAB     &bt BT_CLR      &out OUT_BLE    &out OUT_USB    &none    			        	    &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp ENTER
		&none       &none           &none           &none           &none				                &none       &none       &none       &none       &none
          				                            &none           &to DEFAULT_L  				        &to SYMBOLS_L   &kp SPC
		>;
		};	
		
		numbers_layer {
		bindings = <
		&kp ESC     &kp C_PP    &kp C_PREV      &kp C_NEXT      &none 						        &kp MINUS   &kp N7      &kp N8      &kp N9      &kp BSPC
		&kp TAB     &none       &kp C_VOL_DN    &kp C_VOL_UP    &kp PLUS 			        	    &kp EQUAL   &kp N4      &kp N5      &kp N6      &kp ENTER
		&kp K_POWER &kp STAR    &kp C_BRI_DN    &kp C_BRI_UP    &kp DOT				                &kp N0      &kp N1      &kp N2      &kp N3      &to NAVI_L
          				                        &none           &to DEFAULT_L  				        &to SYMBOLS_L           &kp SPC
		>;
		};	
        
	};
};
